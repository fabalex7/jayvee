// SPDX-FileCopyrightText: 2023 Friedrich-Alexander-Universitat Erlangen-Nurnberg
//
// SPDX-License-Identifier: AGPL-3.0-only

/**
* A CSVExtractor extracts a file from a given URL and interprets it as CSV
*/
composite blocktype CSVExtractor {
    property url oftype text;
    property delimiter oftype text: ',';
    property enclosing oftype text: '';
    property enclosingEscape oftype text: '';
    property encoding oftype text: 'utf-8';

    input inputPort oftype None;
    output outputPort oftype Sheet;

    inputPort
        -> FileExtractor
        -> FileInterpreter
        -> outputPort;

    block FileExtractor oftype HttpExtractor { 
        url: url; 
    }

	block FileInterpreter oftype CSVFileInterpreter {
		delimiter: delimiter;
		enclosing: enclosing;
		enclosingEscape: enclosingEscape;
        enoding: encoding;
	}
}

/**
* A CSVFileInterpreter interprets a file as CSV
*/
composite blocktype CSVFileInterpreter {
    property delimiter oftype text: ',';
    property enclosing oftype text: '';
    property enclosingEscape oftype text: '';
    property enoding oftype text: 'utf-8';

    input inputPort oftype File;
    output outputPort oftype Sheet;

    inputPort
        -> FileTextInterpreter
        -> FileCSVInterpreter
        -> outputPort;

    block FileTextInterpreter oftype TextFileInterpreter {
        encoding: enoding;
    }

    block FileCSVInterpreter oftype CSVInterpreter {
	    delimiter: delimiter;
	    enclosing: enclosing;
	    enclosingEscape: enclosingEscape;
    }
}

pipeline CompositeCarsPipeline {
    block CarsExtractor oftype CSVExtractor {
        url: "https://gist.githubusercontent.com/noamross/e5d3e859aa0c794be10b/raw/b999fb4425b54c63cab088c0ce2c0d6ce961a563/cars.csv";
    }
    block NameHeaderWriter oftype CellWriter {
		at: cell A1;
		write: ["name"];
	}
    block CarsTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"name" oftype text,
			"mpg" oftype decimal,
			"cyl" oftype integer,
			"disp" oftype decimal,
			"hp" oftype integer,
			"drat" oftype decimal,
			"wt" oftype decimal,
			"qsec" oftype decimal,
			"vs" oftype integer,
			"am" oftype integer,
			"gear" oftype integer,
			"carb" oftype integer
		];
	}
    block CarsLoader oftype SQLiteLoader {
		table: "Cars";
		file: "./cars2.sqlite";
	}
    CarsExtractor
        -> NameHeaderWriter
        -> CarsTableInterpreter
        -> CarsLoader;

}